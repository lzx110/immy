package com.immy.beans;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProductTypeExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table PRODUCT_TYPE
	 * @ibatorgenerated  Fri May 22 08:54:35 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table PRODUCT_TYPE
	 * @ibatorgenerated  Fri May 22 08:54:35 CST 2015
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table PRODUCT_TYPE
	 * @ibatorgenerated  Fri May 22 08:54:35 CST 2015
	 */
	public ProductTypeExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table PRODUCT_TYPE
	 * @ibatorgenerated  Fri May 22 08:54:35 CST 2015
	 */
	protected ProductTypeExample(ProductTypeExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table PRODUCT_TYPE
	 * @ibatorgenerated  Fri May 22 08:54:35 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table PRODUCT_TYPE
	 * @ibatorgenerated  Fri May 22 08:54:35 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table PRODUCT_TYPE
	 * @ibatorgenerated  Fri May 22 08:54:35 CST 2015
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table PRODUCT_TYPE
	 * @ibatorgenerated  Fri May 22 08:54:35 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table PRODUCT_TYPE
	 * @ibatorgenerated  Fri May 22 08:54:35 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table PRODUCT_TYPE
	 * @ibatorgenerated  Fri May 22 08:54:35 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table PRODUCT_TYPE
	 * @ibatorgenerated  Fri May 22 08:54:35 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table PRODUCT_TYPE
	 * @ibatorgenerated  Fri May 22 08:54:35 CST 2015
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("id =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("id <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("id >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("id >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("id <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("id <=", value, "id");
			return this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("id like", value, "id");
			return this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("id not like", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}

		public Criteria andTypeNameIsNull() {
			addCriterion("type_name is null");
			return this;
		}

		public Criteria andTypeNameIsNotNull() {
			addCriterion("type_name is not null");
			return this;
		}

		public Criteria andTypeNameEqualTo(String value) {
			addCriterion("type_name =", value, "typeName");
			return this;
		}

		public Criteria andTypeNameNotEqualTo(String value) {
			addCriterion("type_name <>", value, "typeName");
			return this;
		}

		public Criteria andTypeNameGreaterThan(String value) {
			addCriterion("type_name >", value, "typeName");
			return this;
		}

		public Criteria andTypeNameGreaterThanOrEqualTo(String value) {
			addCriterion("type_name >=", value, "typeName");
			return this;
		}

		public Criteria andTypeNameLessThan(String value) {
			addCriterion("type_name <", value, "typeName");
			return this;
		}

		public Criteria andTypeNameLessThanOrEqualTo(String value) {
			addCriterion("type_name <=", value, "typeName");
			return this;
		}

		public Criteria andTypeNameLike(String value) {
			addCriterion("type_name like", value, "typeName");
			return this;
		}

		public Criteria andTypeNameNotLike(String value) {
			addCriterion("type_name not like", value, "typeName");
			return this;
		}

		public Criteria andTypeNameIn(List values) {
			addCriterion("type_name in", values, "typeName");
			return this;
		}

		public Criteria andTypeNameNotIn(List values) {
			addCriterion("type_name not in", values, "typeName");
			return this;
		}

		public Criteria andTypeNameBetween(String value1, String value2) {
			addCriterion("type_name between", value1, value2, "typeName");
			return this;
		}

		public Criteria andTypeNameNotBetween(String value1, String value2) {
			addCriterion("type_name not between", value1, value2, "typeName");
			return this;
		}

		public Criteria andTypeDescriptionIsNull() {
			addCriterion("type_description is null");
			return this;
		}

		public Criteria andTypeDescriptionIsNotNull() {
			addCriterion("type_description is not null");
			return this;
		}

		public Criteria andTypeDescriptionEqualTo(String value) {
			addCriterion("type_description =", value, "typeDescription");
			return this;
		}

		public Criteria andTypeDescriptionNotEqualTo(String value) {
			addCriterion("type_description <>", value, "typeDescription");
			return this;
		}

		public Criteria andTypeDescriptionGreaterThan(String value) {
			addCriterion("type_description >", value, "typeDescription");
			return this;
		}

		public Criteria andTypeDescriptionGreaterThanOrEqualTo(String value) {
			addCriterion("type_description >=", value, "typeDescription");
			return this;
		}

		public Criteria andTypeDescriptionLessThan(String value) {
			addCriterion("type_description <", value, "typeDescription");
			return this;
		}

		public Criteria andTypeDescriptionLessThanOrEqualTo(String value) {
			addCriterion("type_description <=", value, "typeDescription");
			return this;
		}

		public Criteria andTypeDescriptionLike(String value) {
			addCriterion("type_description like", value, "typeDescription");
			return this;
		}

		public Criteria andTypeDescriptionNotLike(String value) {
			addCriterion("type_description not like", value, "typeDescription");
			return this;
		}

		public Criteria andTypeDescriptionIn(List values) {
			addCriterion("type_description in", values, "typeDescription");
			return this;
		}

		public Criteria andTypeDescriptionNotIn(List values) {
			addCriterion("type_description not in", values, "typeDescription");
			return this;
		}

		public Criteria andTypeDescriptionBetween(String value1, String value2) {
			addCriterion("type_description between", value1, value2,
					"typeDescription");
			return this;
		}

		public Criteria andTypeDescriptionNotBetween(String value1,
				String value2) {
			addCriterion("type_description not between", value1, value2,
					"typeDescription");
			return this;
		}
	}
}